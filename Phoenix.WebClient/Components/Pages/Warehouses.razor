@page "/warehouses"
@using Microsoft.AspNetCore.Components.QuickGrid
@rendermode InteractiveServer
@inherits ListPageBase

<StandardListButtons
    MenuName="Warehouses"
    SearchInvoked="HandleSearchFromRibbon"
    NewInvoked="NewWarehouse"
    DeleteInvoked="HandleDelete"
    ExportInvoked="ExportToExcel"
    RefreshInvoked="HandleRefresh">    
</StandardListButtons>

<ConfirmDialogue Show="showConfirmDialogue" OnCancel="CancelDeleteDialogue" OnOk="DeleteConfirmed">
    <h3>
        Do you want to delete this record?
    </h3>
</ConfirmDialogue>

<Toast></Toast>

<div class="row" @onclick="HideContext">
    <div class="col-2 border-end border-dark filter-control">
        <SearchWidget 
            SearchInvoked=ApplySearchFromWidget 
            ClearSearchInvoked="ClearSearchFromWidget"
            SearchProps="_warehouse.SearchProps()">
        </SearchWidget>
    </div>
    <div class="col-md">
        <div class="grid" tabindex="-1">
            <QuickGrid id="quickGrid" ItemsProvider="warehousesProvider" @ref="warehouseGrid" Virtualize="true" Class="table table-striped table-hover vh-100">
                <TemplateColumn Title="Id">
                    <a href="javascript:void(0);" @onclick="() => EditRecord(context)" aria-label="Edit @context.Id">@context.Id</a>
                </TemplateColumn>
                <TemplateColumn>
                    <button class="btn bi bi-three-dots-vertical p-1"
                            type="button" id="contextMenuButton"
                            @onclick="ContextMenu"
                            @onfocus="() => SetCurrentRow(context)">
                    </button>
                </TemplateColumn>
                <PropertyColumn Property="@(c => c.Name)" />
                <PropertyColumn Property="@(c => c.Street1)" />
                <PropertyColumn Property="@(c => c.Postcode)" />
                <PropertyColumn Title="Country" Property="@(c => c.CountryCode)" />
            </QuickGrid>
        </div>
    </div>
    @if(_contextMenuVisible)
    {
        <div id="cdkOverlay" class="border border-primary rounded-1" style="@cdkOverlayPane">
            <ul class="navbar-nav">
                <li class="nav-item1">
                    <button class="btn bi bi-x-square pe-3" @onclick="Edit"> Edit</button>
                </li>
                <li class="nav-item1">
                    <button class="btn bi bi-trash" @onclick="HandleDelete"> Delete</button>
                </li>
            </ul>
        </div>
    }

    @if(_editMode && _currentWarehouse != null)
    {
        <div class="overlay">
            <WarehouseEditComponent 
                id="@_currentWarehouse.Id"
                CloseInvoked="HandleClose">
            </WarehouseEditComponent>
        </div>
    }
</div>
